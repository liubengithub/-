server:
  port: 8080
spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource # 自定义数据源
    #Spring Boot 默认是不注入这些属性值的，需要自己绑定
    #druid 数据源专有配置
    initialSize: 1
    minIdle: 1
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true

    #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  #开发环境下关闭缓存，方便调试不然每次修改页面都需要重启
  thymeleaf:
    cache: false
    mode: HTML
    #其主要作用是：自动创建、更新、验证数据库表结构。
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  aop:
    auto: true
    proxy-target-class: true
##日志级别设置  ----特定包下（注意空格）
logging:
  level:
    root: info
    com.liu: debug
  file:
    name: log/blog.log
#整合mybatis
mybatis:
  type-aliases-package: com.liu.pojo
  mapper-locations: classpath:com/liu/mapper/*.xml
 # mapUnderscoreToCamelCase
  configuration:
    map-underscore-to-camel-case: true
pagehelper:
  reasonable: true


